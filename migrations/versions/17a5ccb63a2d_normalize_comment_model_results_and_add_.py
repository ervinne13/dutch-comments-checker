"""Normalize comment model results and add model/result tables

Revision ID: 17a5ccb63a2d
Revises: 79d66102f398
Create Date: 2025-07-13 03:50:27.374255

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '17a5ccb63a2d'
down_revision: Union[str, Sequence[str], None] = '79d66102f398'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment_translation_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('text_translation', sa.Text(), nullable=True),
    sa.Column('context_translation', sa.Text(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('llm_comment_analyses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spam_comment_classifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('spam', sa.Float(), nullable=True),
    sa.Column('ham', sa.Float(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('toxic_comment_classifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('toxic', sa.Float(), nullable=True),
    sa.Column('insult', sa.Float(), nullable=True),
    sa.Column('obscene', sa.Float(), nullable=True),
    sa.Column('identity_hate', sa.Float(), nullable=True),
    sa.Column('severe_toxic', sa.Float(), nullable=True),
    sa.Column('threat', sa.Float(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_column('comments', 'toxic')
    op.drop_column('comments', 'llm_last_processed_at')
    op.drop_column('comments', 'obscene')
    op.drop_column('comments', 'severe_toxic')
    op.drop_column('comments', 'identity_hate')
    op.drop_column('comments', 'ham')
    op.drop_column('comments', 'threat')
    op.drop_column('comments', 'llm_remarks')
    op.drop_column('comments', 'llm_escalation_results')
    op.drop_column('comments', 'spam')
    op.drop_column('comments', 'insult')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('insult', mysql.FLOAT(), nullable=True))
    op.add_column('comments', sa.Column('spam', mysql.FLOAT(), nullable=True))
    op.add_column('comments', sa.Column('llm_escalation_results', mysql.TEXT(), nullable=True))
    op.add_column('comments', sa.Column('llm_remarks', mysql.TEXT(), nullable=True))
    op.add_column('comments', sa.Column('threat', mysql.FLOAT(), nullable=True))
    op.add_column('comments', sa.Column('ham', mysql.FLOAT(), nullable=True))
    op.add_column('comments', sa.Column('identity_hate', mysql.FLOAT(), nullable=True))
    op.add_column('comments', sa.Column('severe_toxic', mysql.FLOAT(), nullable=True))
    op.add_column('comments', sa.Column('obscene', mysql.FLOAT(), nullable=True))
    op.add_column('comments', sa.Column('llm_last_processed_at', mysql.DATETIME(), nullable=True))
    op.add_column('comments', sa.Column('toxic', mysql.FLOAT(), nullable=True))
    op.drop_table('toxic_comment_classifications')
    op.drop_table('spam_comment_classifications')
    op.drop_table('llm_comment_analyses')
    op.drop_table('comment_translation_results')
    op.drop_table('models')
    # ### end Alembic commands ###
